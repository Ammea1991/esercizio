// const { Nuxt, Builder } = require('nuxt')
// // eslint-disable-next-line no-unused-vars
// const nuxtConfig = require('../nuxt.config.js')
// // We keep the nuxt and server instance
// // So we can close them at the end of the test
// let nuxt = null

// // Init Nuxt.js and create a server listening on localhost:4000
// beforeAll(async () => {
//     // const config = {
//     //   dev: process.env.NODE_ENV === 'production',
//     //   rootDir: resolve(__dirname, '../'),
//     //   mode: 'universal',
//     //   plugins,
//     //   modules
//     // }

//     nuxt = new Nuxt({ ...nuxtConfig, server: { port: 8002 }, buildDir: '.nuxt-build-jest' })

//     await new Builder(nuxt).build()

//     await nuxt.server.listen(8002, '192.168.1.86')
// }, 3000)

// // Example of testing only generated html
// describe('GET /', () => {
//     test('Route / exits and render HTML', async () => {
//         const { html } = await nuxt.server.renderRoute('/', {})

//         expect(html).toContain('Vuetify')
//     })
// })


// // Close server and ask nuxt to stop listening to file changes
// afterAll(() => {
//     nuxt.close()
// })